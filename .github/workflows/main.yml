name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-lockfile:
    runs-on: ubuntu-latest

    outputs:
      lockfile-exists: ${{ steps.check-lockfile.outputs.exists }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if package-lock.json exists
        id: check-lockfile
        run: |
          if [ -f package-lock.json ]; then
            echo "{exists}={true}" >> $GITHUB_OUTPUT && echo "exists"
          else
            echo "{exists}={false}" >> $GITHUB_OUTPUT && echo "nope"
          fi

      - name: Set up Node.js
        if: steps.check-lockfile.outputs.exists == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies and generate package-lock.json if needed
        if: steps.check-lockfile.outputs.exists == 'false'
        run: npm install

      - name: Install dependencies and generate package-lock.json
        if: steps.check-lockfile.outputs.exists == 'false'
        run:  npx create-react-app my-app

      - name: Commit and push package-lock.json
        if: steps.check-lockfile.outputs.exists == 'false'
        run: |
          echo "building lockfile"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add package-lock.json
          git commit -m 'Generate package-lock.json' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: generate-lockfile

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'npm'

    - name: Create npm cache directory
      run: mkdir -p /home/runner/.npm

    - name: Configure npm cache
      run: npm config set cache /home/runner/.npm

    - name: Verify npm cache configuration
      run: npm config get cache

    - name: Install gh-pages to bundle for static 
      run: npm install gh-pages --save-dev

    - name: Install dependencies
      run: npm install

    #- name: Run tests
    #  run: npm test

    - name: Build
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: ./dist

    - name: Deploy to DigitalOcean
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        args: apps update ${{ secrets.DIGITALOCEAN_APP_ID }} --spec .do/app.yaml
